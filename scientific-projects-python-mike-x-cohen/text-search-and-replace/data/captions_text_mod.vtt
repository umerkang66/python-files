I'm now going to **** you two **** example problems of computing. eigendecomposition of matrices by ****. Obviously **** is on the computer but I encourage you to do these problems by **** and they're not **** in Matlab. So I guess that's **** it means by ****. So let's get started. **** is a two by two matrix and you should pause the video go through **** the eigenvalues and the eigenvectors of **** matrix so the way we start is by shifting the matrix by Lambda so subtracting lambda **** the diagonal elements setting the determinant equal to **** and **** proceeding to compute the determinant which is **** called the characteristic equation of **** matrix. So **** works out to be three minus lambda times six minus lambda minus **** equals **** and **** expanding these two terms multiplying out these two terms and **** collecting the **** terms gives us lambda squared minus **** lambda **** fourteen equals **** and **** **** expression **** can be factored **** lambda minus seven and Lambda minus two and now **** pretty **** to see **** the two lambdas **** **** solve **** equation **** solve **** equation. In other words the two eigenvalues of **** matrix are **** 7 and **** **** So **** was **** one we found the eigenvalues of **** matrix and now we go through for **** of these eigenvalues shift the matrix by **** amount by **** value and **** figure out **** is a vector in the shifted matrices **** space. OK so let's start **** 2. So **** gives us the matrix 1 1 4 4. And now we **** to **** the missing vector **** and you've probably guessed it already it is 1 minus 1. And of course you **** **** **** acceptable would be minus 1 1 or minus quadrillion **** quadrillion. **** vector simply identifies a subspace for the **** space of **** shifted matrix in any vector that's in **** **** space is perfectly **** as an eigenvector. Now **** **** the **** choice for an eigenvector would be a vector **** has a **** of 1 a magnitude of 1. And the second **** choice would be integer values **** are **** to interpret and compact to write **** ****. All right. So **** was for **** Now we go to the second eigenvalues which was seven and **** gives us **** matrix minus 4 1 and 4 minus 1. And **** a vector **** could **** as an eigenvector as a basis for the **** space of **** shifted matrix is the numbers 1 4. So **** is the big picture overview we **** **** matrix and **** you see the eigenvalue and its corresponding eigenvector and the other eigenvalue and the other corresponding eigenvector. Now **** results **** be correct. If you **** the correct pairing of eigenvalue and any multiple any scaled version of **** vector; it doesn't matter if you **** **** lambda one and **** V one that's **** because there's no intrinsic ordering. **** matters is **** you **** the pairing correct. All right. So **** was the two by two ****. Now let's go for a three by three ****. **** one is a little bit **** challenging and I **** to admit. So I first **** up **** these numbers and **** I started computing the eigendecomposition. Now I **** to admit **** I got stuck on one of the eigenvectors. I couldn't quite figure it out on my **** So I **** Matlab to compute **** eigenvector. So **** I encourage you to do is **** all three eigenvalues by **** and I think it **** be pretty obvious **** you start working through it which is the difficult eigenvalue. So **** **** you should do by **** is **** two of the eigenvectors **** you can get basically **** by **** of eyeballing and making **** educated guesses. And **** the third eigenvector you can use a computer to solve or you can **** **** and watch me **** up **** a solution. All right. So again we start by shifting **** matrix by minus lambda setting the determinant equal to **** and **** proceeding to compute the determinant of **** equation and altogether **** gives us the characteristic equation of **** matrix. Now **** is a little bit longer. **** a little bit trickier the arithmetic **** a little bit hairy in particular you end up **** **** minus lambda cubed **** as **** as a couple of multiple terms **** Lambda and Lambda squared. Now **** you collect all of these **** terms you'll end up **** an expression **** looks **** ****. So it should be minus lambda cubed **** 10 times lambda squared **** eleven lambda equals **** Now something interesting has happened **** all of these terms **** a lambda attached to **** which means **** we can **** a lambda out of **** of these terms and rewrite **** expression as minus lambda times. All of **** stuff and immediately **** tells us **** lambda equals **** is a solution. So **** you set **** lambda to be **** it doesn't actually matter what's inside **** parenthetical statement that's immediately going to set to **** **** equation ****. **** means **** one of the eigenvalues of **** matrix is **** and I'm going to **** an entire video **** about **** phenomenon a little bit later in **** section. But essentially **** an eigenvector is an eigenvalue is ****. It means **** the matrix is singular and **** you can actually see by looking at **** matrix and you see **** column 1 **** column 2 equals column 3 so whenever you **** a singular matrix at least one eigenvalues value is going to be equal to ****. And in **** the number of eigenvalues **** are equal to **** tells you about the **** of **** matrix. **** on **** in the later video. Now **** you've gotten to **** **** you can further factor **** equation and you end up **** the result **** lambda equals **** lambda equals minus 1 and Lambda equals eleven. So you can probably guess **** **** is going to be the tricky I can value to compute the corresponding I can vector of and **** is the one **** I got a little bit stuck ****. And so I **** Matlab as a crutch. I cheated a little **** OK so but let's go through all of these. So we start **** **** and now **** is **** of a funny thing because we are shifting the matrix by **** which actually means we're not changing the matrix at **** And **** means **** **** matrix A already has a non-trivial **** space **** without doing any shifting. So **** problem actually boils **** to finding a vector in the **** space or a basis for the **** space. **** without doing any shifting so based on **** I **** **** you about how do I set up **** matrix **** column one **** column two equals column three a basis for the **** space is 1 one minus 1. So you can try for **** of these **** the first column **** the second column minus the third column equals **** all right. So now let's **** on. So now we shift **** matrix by eleven and **** is basically where I got stuck and switch to matlab. So it turns out **** eigenvector is nineteen forty one and thirty **** So if you figured out **** I can vector on **** own without using a computer **** **** for you you are a better or at least **** patient mathematician **** I am. And **** we get to the third eigenvalue which was minus **** So now **** becomes **** **** And **** is **** shifted matrix and **** one you should be **** to solve on **** **** In **** **** **** easier **** it looks. And if you **** a **** before I **** the answer **** the **** is **** consider **** **** third column is actually pretty useless if you get rid of **** third column it becomes really **** to **** the  eigenvector in **** shifted matrices **** space. So in **** **** one minus one and **** **** you **** set the third element to be ****. So **** leads us to the big picture overview of the eigendecomposition of **** three by three singular matrix **** 2 matrix we **** eigenvalues 0 minus 11 and minus 1. And these are the corresponding eigenvectors. And notice **** written **** as row vectors and **** transpose. So these are still column vectors we generally always think about eigenvectors as column vectors and you **** learn **** about why **** is the **** in the video on diagonalization, which is coming up ****.